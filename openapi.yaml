openapi: 3.1.1
info:
  title: RackApp API
  version: 0.1.0
servers:
  - url: http://localhost:9292
    description: Development server
paths:
  /login:
    post:
      summary: authenticates users
      requestBody:
        description: user to authenticate
        content:
          application/json:
            example:
              username: 'amacagno'
              password: '1111'
        required: true
      responses:
        '200':
          description: 'token needed for private endpoints'
          content:
            application/json:
              example:
                token: 'eyJhbGciOiJIUzI1NiJ9...'
                expiration: '03-05-2025 14:53'
        '400':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Bad Request: invalid body.'
        '401':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Unauthorized: invalid username or password.'
  /products:
    get:
      summary: finds products
      parameters:
        - name: name
          in: query
          description: name of the product to find
          required: false
          schema:
            type: string
      responses:
        '200':
          description: an array of products to be returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
                example:
                  - id: 1
                    name: 'MacBook Air'
                  - id: 2
                    name: 'MacBook Pro'
                  - id: 3
                    name: 'Mac Studio'
        '401':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Unauthorized: signature verification failed.'
      security:
        - api_key: []
    post:
      summary: creates products asynchronously
      requestBody:
        description: product to create
        content:
          application/json:
            example:
              name: 'MacBook Pro'
        required: true
      responses:
        '202':
          description: 'a product id (use to find the product)'
          content:
            application/json:
              example:
                id: 1
        '400':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Bad Request: invalid body.'
        '401':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Unauthorized: signature verification failed.'
      security:
        - api_key: []
  /products/{id}:
    get:
      summary: find product
      parameters:
        - name: id
          in: path
          description: id of the product to find
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: a product to be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 1
                name: 'MacBook Pro'
        '401':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Unauthorized: signature verification failed.'
        '404':
          description: 'an error message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Not Found: invalid id.'
      security:
        - api_key: []
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
